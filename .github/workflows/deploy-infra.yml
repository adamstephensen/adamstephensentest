name: Azure Bicep Deployment
on:
  workflow_dispatch:
    inputs:
      reason:
        description: The reason for running the workflow
        required: false
        default: Manual run
      environment:
        description: "Select the Azure environment"
        required: true
        type: choice
        default: "Development"
        options:
          - Development
          - Test
          - Production
# on:
#   push:
#     branches:
#       - main

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

jobs:
  infra-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      AZURE_BICEP_MAIN: "./infra/main.bicep"
      ENVIRONMENT: ${{ github.event.inputs.environment }} # Sets ENVIRONMENT based on input

    steps:
      - name: Set Bicep Param file
        run: |
          if [ "${{ github.event.inputs.environment }}" == "Development" ]; then
            echo "BICEP_PARAMS=./infra/dev.parameters.json" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.environment }}" == "Test" ]; then
            echo "BICEP_PARAMS=./infra/tst.parameters.json" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.environment }}" == "Production" ]; then
            echo "BICEP_PARAMS=./infra/prd.parameters.json" >> $GITHUB_ENV
          fi

      - name: Verify environment variable
        run: echo "The selected bicep params file is ${{ env.BICEP_PARAMS }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Lint and Prep Bicep
        uses: azure/cli@v2
        with:
          azcliversion: 2.64.0
          inlineScript: |
            tdnf install -y icu
            tdnf install -y jq
            az bicep install
            az config set bicep.use_binary_from_path=false && az bicep build -f ${{ env.AZURE_BICEP_MAIN }} --stdout

      - name: Check if Resource Group Exist
        id: check_rsg
        uses: azure/cli@v2
        with:
          azcliversion: 2.64.0
          inlineScript: |
            az group show --name "${{ env.AZURE_RESOURCE_GROUP }}" >/dev/null 2>&1 || echo "not found"

      - name: Create Resource Group (if not exists)
        if: steps.check_rsg.outputs.exit_code == 'failure'
        uses: azure/cli@v2
        with:
          azcliversion: 2.64.0
          inlineScript: |
            az group create --name "${{ env.AZURE_RESOURCE_GROUP }}" --location "${{ env.AZURE_LOCATION }}"

        ##https://github.com/Azure/bicep-deploy
      - name: Deploy Bicep to Azure
        uses: azure/bicep-deploy@v1
        with:
          type: deployment
          operation: create
          name: "${{ env.AZURE_ENV_NAME }}"
          scope: resourceGroup
          resource-group-name: "${{ env.AZURE_RESOURCE_GROUP }}"
          subscription-id: "${{ env.AZURE_SUBSCRIPTION_ID }}"
          template-file: "${{ env.AZURE_BICEP_MAIN }}"
          parameters-file: "${{ env.BICEP_PARAMS }}"
