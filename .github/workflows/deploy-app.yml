name: Deploy Web Apps

#on:
  # push:
  #   branches:
  #     - main # Deploy on push to main branch
  workflow_dispatch: # Allow manual trigger of the workflow

  # Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
      AGILE_CHAT_API_SRC: "./src/agile-chat-api"
      AGILE_CHAT_API_PUB: "./publish/agile-chat-api"
      AGILE_CHAT_API_NAME: "agilechat-dev-apiapp"
      AGILE_CHAT_WEB_SRC: "./src/agile-chat-web"
      AGILE_CHAT_WEB_PUB: "./publish/agile-chat-web"
      AGILE_CHAT_WEB_NAME: "agilechat-dev-webapp"
      AGILE_RAGCHAT_API_SRC: "./src/agile-ragchat-api"
      AGILE_RAGCHAT_API_PUB: "./publish/agile-ragchat-api"
      AGILE_RAGCHAT_API_NAME: "agile-ragchat-api"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

        #############################################################
        ## Agile-Chat-Api- dotnet build and publish
      - name: Agile-Chat-Api- dotnet build and publish
        run: |
          dotnet restore ${{ env.AGILE_CHAT_API_SRC }}
          dotnet build ${{ env.AGILE_CHAT_API_SRC }} --no-restore --configuration Release
          dotnet publish ${{ env.AGILE_CHAT_API_SRC }} -c Release -o .${{ env.AGILE_CHAT_API_PUB }} 

        #############################################################

          ## Agile-Chat-Web- dotnet build and publish
      - name: Agile-Chat-Web- dotnet build and publish
        run: |
          dotnet restore ${{ env.AGILE_CHAT_WEB_SRC }}
          dotnet build ${{ env.AGILE_CHAT_WEB_SRC }} --no-restore --configuration Release
          dotnet publish ${{ env.AGILE_CHAT_WEB_SRC }} -c Release -o .${{ env.AGILE_CHAT_WEB_PUB }} 

        #############################################################

       ## Agile-RagChat-Web- dotnet build and publish
      - name: Agile-RagChat-Web- dotnet build and publish
        run: |
          dotnet restore ${{ env.AGILE_RAGCHAT_API_SRC }}
          dotnet build ${{ env.AGILE_RAGCHAT_API_SRC }} --no-restore --configuration Release
          dotnet publish ${{ env.AGILE_RAGCHAT_API_SRC }} -c Release -o .${{ env.AGILE_RAGCHAT_API_PUB }} 

        #############################################################

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

        #############################################################

      # - name: Deploy - Agile-Chat-Api
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ env.AGILE_CHAT_API_NAME }}
      #     package: ${{ env.AGILE_CHAT_API_PUB }}
      #     resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
      #     subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

        #############################################################

      # - name: Deploy - Agile-Chat-Web
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ env.AGILE_CHAT_WEB_NAME }}
      #     package: ${{ env.AGILE_CHAT_WEB_PUB }}
      #     resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
      #     subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

        #############################################################
        
      # - name: Deploy - Agile-RagChat-Web
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ env.AGILE_RAGCHAT_API_NAME }}
      #     package: ${{ env.AGILE_RAGCHAT_API_PUB }}
      #     resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
      #     subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

        #############################################################
